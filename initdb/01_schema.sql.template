CREATE SCHEMA IF NOT EXISTS ${POSTGRES_DB_SCHEMA} AUTHORIZATION ${POSTGRES_DB_ADMIN_NAME};

-- lock down public
REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE CREATE ON SCHEMA public FROM PUBLIC;

-- role hardening
ALTER ROLE ${POSTGRES_DB_WRITER_NAME}  NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT LOGIN;
ALTER ROLE ${POSTGRES_DB_READER_NAME}  NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT LOGIN;

-- search_path
ALTER ROLE ${POSTGRES_DB_ADMIN_NAME}   SET search_path = ${POSTGRES_DB_SCHEMA};
ALTER ROLE ${POSTGRES_DB_WRITER_NAME}  SET search_path = ${POSTGRES_DB_SCHEMA};
ALTER ROLE ${POSTGRES_DB_READER_NAME}  SET search_path = ${POSTGRES_DB_SCHEMA};

-- writer role
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname='${POSTGRES_DB_WRITER_NAME}') THEN
        EXECUTE format('CREATE ROLE %I LOGIN PASSWORD %L','${POSTGRES_DB_WRITER_NAME}', '${POSTGRES_DB_WRITER_PASSWORD}');
    END IF;
END$$;

-- reader role
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname='${POSTGRES_DB_READER_NAME}') THEN
        EXECUTE format('CREATE ROLE %I LOGIN PASSWORD %L','${POSTGRES_DB_READER_NAME}', '${POSTGRES_DB_READER_PASSWORD}');
    END IF;
END$$;

-- functions and sequences (existing)
GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA ${POSTGRES_DB_SCHEMA} TO ${POSTGRES_DB_WRITER_NAME}, ${POSTGRES_DB_READER_NAME};
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA ${POSTGRES_DB_SCHEMA} TO ${POSTGRES_DB_WRITER_NAME};

-- privileges
GRANT CONNECT ON DATABASE ${POSTGRES_DB_NAME} TO ${POSTGRES_DB_WRITER_NAME};
GRANT CONNECT ON DATABASE ${POSTGRES_DB_NAME} TO ${POSTGRES_DB_READER_NAME};

GRANT USAGE ON SCHEMA ${POSTGRES_DB_SCHEMA} TO ${POSTGRES_DB_WRITER_NAME};
GRANT USAGE ON SCHEMA ${POSTGRES_DB_SCHEMA} TO ${POSTGRES_DB_READER_NAME};

GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA ${POSTGRES_DB_SCHEMA} TO ${POSTGRES_DB_WRITER_NAME};
GRANT SELECT ON ALL TABLES IN SCHEMA ${POSTGRES_DB_SCHEMA} TO ${POSTGRES_DB_READER_NAME};

ALTER DEFAULT PRIVILEGES IN SCHEMA ${POSTGRES_DB_SCHEMA}
    GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO ${POSTGRES_DB_WRITER_NAME};
ALTER DEFAULT PRIVILEGES IN SCHEMA ${POSTGRES_DB_SCHEMA}
    GRANT SELECT ON TABLES TO ${POSTGRES_DB_READER_NAME};

-- future objects owned by the admin
ALTER DEFAULT PRIVILEGES FOR ROLE ${POSTGRES_DB_ADMIN_NAME} IN SCHEMA ${POSTGRES_DB_SCHEMA}
    GRANT EXECUTE ON FUNCTIONS TO ${POSTGRES_DB_WRITER_NAME}, ${POSTGRES_DB_READER_NAME};
ALTER DEFAULT PRIVILEGES FOR ROLE ${POSTGRES_DB_ADMIN_NAME} IN SCHEMA ${POSTGRES_DB_SCHEMA}
    GRANT USAGE, SELECT ON SEQUENCES TO ${POSTGRES_DB_WRITER_NAME};